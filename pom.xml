<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.esslerc.pdfamaker</groupId>
    <artifactId>pdfa-maker</artifactId>
    <version>1.0.0</version>

    <properties>
        <maven.compiler.source>22</maven.compiler.source>
        <maven.compiler.target>22</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.jar.plugin.version>3.4.1</maven.jar.plugin.version>
        <maven.dependency.plugin.version>3.7.1</maven.dependency.plugin.version>
        <exec.maven.plugin.version>3.3.0</exec.maven.plugin.version>

        <openjfx.version>22.0.1</openjfx.version>
        <pdfbox.version>2.0.31</pdfbox.version>
        <junit.version>5.10.2</junit.version>
        <mockito.version>5.12.0</mockito.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>22</java.version>

        <main.class>com.github.esslerc.pdfamaker.Main</main.class>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${openjfx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>${pdfbox.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>xmpbox</artifactId>
            <version>${pdfbox.version}</version>
        </dependency>
        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>22</source>
                    <target>22</target>
                    <compilerArgs>--enable-preview</compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <id>create-runtime-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>${java.home}/bin/jlink</executable>
                            <arguments>
                                <argument>--module-path</argument>
                                <argument>${java.home}/jmods:${project.build.directory}/libs</argument>
                                <argument>--add-modules</argument>
                                <argument>java.base,javafx.controls</argument>
                                <argument>--output</argument>
                                <argument>${project.build.directory}/runtime</argument>
                                <argument>--strip-debug</argument>
                                <argument>--no-header-files</argument>
                                <argument>--no-man-pages</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <family>Mac OS X</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>package-dmg</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>dmg</argument>
                                        <argument>--input</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>--dest</argument>
                                        <argument>${project.build.directory}/dmg</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>${main.class}</argument>
                                        <argument>--icon</argument>
                                        <argument>${project.basedir}/src/main/resources/icons/icon.icns</argument>
                                        <argument>--runtime-image</argument>
                                        <argument>${project.build.directory}/runtime</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--vendor</argument>
                                        <argument>esslerc</argument>
                                        <argument>--mac-package-name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--mac-package-identifier</argument>
                                        <argument>com.github.esslerc.pdfamaker</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>package-msi</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>msi</argument>
                                        <argument>--input</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>--dest</argument>
                                        <argument>${project.build.directory}/msi</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>${main.class}</argument>
                                        <argument>--icon</argument>
                                        <argument>${project.basedir}/src/main/resources/icons/icon.icns</argument>
                                        <argument>--runtime-image</argument>
                                        <argument>${project.build.directory}/runtime</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--vendor</argument>
                                        <argument>esslerc</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>Debian</id>
            <activation>
                <os>
                    <family>Linux</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>package-deb</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${java.home}/bin/jpackage</executable>
                                    <arguments>
                                        <argument>--type</argument>
                                        <argument>deb</argument>
                                        <argument>--input</argument>
                                        <argument>${project.build.directory}</argument>
                                        <argument>--dest</argument>
                                        <argument>${project.build.directory}/deb</argument>
                                        <argument>--name</argument>
                                        <argument>${project.name}</argument>
                                        <argument>--main-jar</argument>
                                        <argument>${project.build.finalName}.jar</argument>
                                        <argument>--main-class</argument>
                                        <argument>${main.class}</argument>
                                        <argument>--icon</argument>
                                        <argument>${project.basedir}/src/main/resources/icons/icon.icns</argument>
                                        <argument>--runtime-image</argument>
                                        <argument>${project.build.directory}/runtime</argument>
                                        <argument>--app-version</argument>
                                        <argument>${project.version}</argument>
                                        <argument>--vendor</argument>
                                        <argument>esslerc</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>